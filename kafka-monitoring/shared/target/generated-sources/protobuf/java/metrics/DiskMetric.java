// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: metrics.proto

package metrics;

/**
 * Protobuf type {@code metrics.DiskMetric}
 */
public final class DiskMetric extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:metrics.DiskMetric)
    DiskMetricOrBuilder {
private static final long serialVersionUID = 0L;
  // Use DiskMetric.newBuilder() to construct.
  private DiskMetric(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private DiskMetric() {
    diskName_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new DiskMetric();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return metrics.Metrics.internal_static_metrics_DiskMetric_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return metrics.Metrics.internal_static_metrics_DiskMetric_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            metrics.DiskMetric.class, metrics.DiskMetric.Builder.class);
  }

  public static final int DISKNAME_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object diskName_ = "";
  /**
   * <code>string diskName = 1;</code>
   * @return The diskName.
   */
  @java.lang.Override
  public java.lang.String getDiskName() {
    java.lang.Object ref = diskName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      diskName_ = s;
      return s;
    }
  }
  /**
   * <code>string diskName = 1;</code>
   * @return The bytes for diskName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDiskNameBytes() {
    java.lang.Object ref = diskName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      diskName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DISKREADS_FIELD_NUMBER = 2;
  private long diskReads_ = 0L;
  /**
   * <code>int64 diskReads = 2;</code>
   * @return The diskReads.
   */
  @java.lang.Override
  public long getDiskReads() {
    return diskReads_;
  }

  public static final int DISKWRITES_FIELD_NUMBER = 3;
  private long diskWrites_ = 0L;
  /**
   * <code>int64 diskWrites = 3;</code>
   * @return The diskWrites.
   */
  @java.lang.Override
  public long getDiskWrites() {
    return diskWrites_;
  }

  public static final int DISKREADBYTES_FIELD_NUMBER = 4;
  private long diskReadBytes_ = 0L;
  /**
   * <code>int64 diskReadBytes = 4;</code>
   * @return The diskReadBytes.
   */
  @java.lang.Override
  public long getDiskReadBytes() {
    return diskReadBytes_;
  }

  public static final int DISKWRITEBYTES_FIELD_NUMBER = 5;
  private long diskWriteBytes_ = 0L;
  /**
   * <code>int64 diskWriteBytes = 5;</code>
   * @return The diskWriteBytes.
   */
  @java.lang.Override
  public long getDiskWriteBytes() {
    return diskWriteBytes_;
  }

  public static final int DISKQUEUELENGTH_FIELD_NUMBER = 6;
  private long diskQueueLength_ = 0L;
  /**
   * <code>int64 diskQueueLength = 6;</code>
   * @return The diskQueueLength.
   */
  @java.lang.Override
  public long getDiskQueueLength() {
    return diskQueueLength_;
  }

  public static final int DISKTRANSFERTIME_FIELD_NUMBER = 7;
  private long diskTransferTime_ = 0L;
  /**
   * <code>int64 diskTransferTime = 7;</code>
   * @return The diskTransferTime.
   */
  @java.lang.Override
  public long getDiskTransferTime() {
    return diskTransferTime_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(diskName_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, diskName_);
    }
    if (diskReads_ != 0L) {
      output.writeInt64(2, diskReads_);
    }
    if (diskWrites_ != 0L) {
      output.writeInt64(3, diskWrites_);
    }
    if (diskReadBytes_ != 0L) {
      output.writeInt64(4, diskReadBytes_);
    }
    if (diskWriteBytes_ != 0L) {
      output.writeInt64(5, diskWriteBytes_);
    }
    if (diskQueueLength_ != 0L) {
      output.writeInt64(6, diskQueueLength_);
    }
    if (diskTransferTime_ != 0L) {
      output.writeInt64(7, diskTransferTime_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(diskName_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, diskName_);
    }
    if (diskReads_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(2, diskReads_);
    }
    if (diskWrites_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(3, diskWrites_);
    }
    if (diskReadBytes_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(4, diskReadBytes_);
    }
    if (diskWriteBytes_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(5, diskWriteBytes_);
    }
    if (diskQueueLength_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(6, diskQueueLength_);
    }
    if (diskTransferTime_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(7, diskTransferTime_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof metrics.DiskMetric)) {
      return super.equals(obj);
    }
    metrics.DiskMetric other = (metrics.DiskMetric) obj;

    if (!getDiskName()
        .equals(other.getDiskName())) return false;
    if (getDiskReads()
        != other.getDiskReads()) return false;
    if (getDiskWrites()
        != other.getDiskWrites()) return false;
    if (getDiskReadBytes()
        != other.getDiskReadBytes()) return false;
    if (getDiskWriteBytes()
        != other.getDiskWriteBytes()) return false;
    if (getDiskQueueLength()
        != other.getDiskQueueLength()) return false;
    if (getDiskTransferTime()
        != other.getDiskTransferTime()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + DISKNAME_FIELD_NUMBER;
    hash = (53 * hash) + getDiskName().hashCode();
    hash = (37 * hash) + DISKREADS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getDiskReads());
    hash = (37 * hash) + DISKWRITES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getDiskWrites());
    hash = (37 * hash) + DISKREADBYTES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getDiskReadBytes());
    hash = (37 * hash) + DISKWRITEBYTES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getDiskWriteBytes());
    hash = (37 * hash) + DISKQUEUELENGTH_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getDiskQueueLength());
    hash = (37 * hash) + DISKTRANSFERTIME_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getDiskTransferTime());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static metrics.DiskMetric parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static metrics.DiskMetric parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static metrics.DiskMetric parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static metrics.DiskMetric parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static metrics.DiskMetric parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static metrics.DiskMetric parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static metrics.DiskMetric parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static metrics.DiskMetric parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static metrics.DiskMetric parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static metrics.DiskMetric parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static metrics.DiskMetric parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static metrics.DiskMetric parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(metrics.DiskMetric prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code metrics.DiskMetric}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:metrics.DiskMetric)
      metrics.DiskMetricOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return metrics.Metrics.internal_static_metrics_DiskMetric_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return metrics.Metrics.internal_static_metrics_DiskMetric_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              metrics.DiskMetric.class, metrics.DiskMetric.Builder.class);
    }

    // Construct using metrics.DiskMetric.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      diskName_ = "";
      diskReads_ = 0L;
      diskWrites_ = 0L;
      diskReadBytes_ = 0L;
      diskWriteBytes_ = 0L;
      diskQueueLength_ = 0L;
      diskTransferTime_ = 0L;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return metrics.Metrics.internal_static_metrics_DiskMetric_descriptor;
    }

    @java.lang.Override
    public metrics.DiskMetric getDefaultInstanceForType() {
      return metrics.DiskMetric.getDefaultInstance();
    }

    @java.lang.Override
    public metrics.DiskMetric build() {
      metrics.DiskMetric result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public metrics.DiskMetric buildPartial() {
      metrics.DiskMetric result = new metrics.DiskMetric(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(metrics.DiskMetric result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.diskName_ = diskName_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.diskReads_ = diskReads_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.diskWrites_ = diskWrites_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.diskReadBytes_ = diskReadBytes_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.diskWriteBytes_ = diskWriteBytes_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.diskQueueLength_ = diskQueueLength_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.diskTransferTime_ = diskTransferTime_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof metrics.DiskMetric) {
        return mergeFrom((metrics.DiskMetric)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(metrics.DiskMetric other) {
      if (other == metrics.DiskMetric.getDefaultInstance()) return this;
      if (!other.getDiskName().isEmpty()) {
        diskName_ = other.diskName_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.getDiskReads() != 0L) {
        setDiskReads(other.getDiskReads());
      }
      if (other.getDiskWrites() != 0L) {
        setDiskWrites(other.getDiskWrites());
      }
      if (other.getDiskReadBytes() != 0L) {
        setDiskReadBytes(other.getDiskReadBytes());
      }
      if (other.getDiskWriteBytes() != 0L) {
        setDiskWriteBytes(other.getDiskWriteBytes());
      }
      if (other.getDiskQueueLength() != 0L) {
        setDiskQueueLength(other.getDiskQueueLength());
      }
      if (other.getDiskTransferTime() != 0L) {
        setDiskTransferTime(other.getDiskTransferTime());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              diskName_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 16: {
              diskReads_ = input.readInt64();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 24: {
              diskWrites_ = input.readInt64();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 32: {
              diskReadBytes_ = input.readInt64();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 40: {
              diskWriteBytes_ = input.readInt64();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            case 48: {
              diskQueueLength_ = input.readInt64();
              bitField0_ |= 0x00000020;
              break;
            } // case 48
            case 56: {
              diskTransferTime_ = input.readInt64();
              bitField0_ |= 0x00000040;
              break;
            } // case 56
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object diskName_ = "";
    /**
     * <code>string diskName = 1;</code>
     * @return The diskName.
     */
    public java.lang.String getDiskName() {
      java.lang.Object ref = diskName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        diskName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string diskName = 1;</code>
     * @return The bytes for diskName.
     */
    public com.google.protobuf.ByteString
        getDiskNameBytes() {
      java.lang.Object ref = diskName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        diskName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string diskName = 1;</code>
     * @param value The diskName to set.
     * @return This builder for chaining.
     */
    public Builder setDiskName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      diskName_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>string diskName = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearDiskName() {
      diskName_ = getDefaultInstance().getDiskName();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <code>string diskName = 1;</code>
     * @param value The bytes for diskName to set.
     * @return This builder for chaining.
     */
    public Builder setDiskNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      diskName_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private long diskReads_ ;
    /**
     * <code>int64 diskReads = 2;</code>
     * @return The diskReads.
     */
    @java.lang.Override
    public long getDiskReads() {
      return diskReads_;
    }
    /**
     * <code>int64 diskReads = 2;</code>
     * @param value The diskReads to set.
     * @return This builder for chaining.
     */
    public Builder setDiskReads(long value) {
      
      diskReads_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>int64 diskReads = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearDiskReads() {
      bitField0_ = (bitField0_ & ~0x00000002);
      diskReads_ = 0L;
      onChanged();
      return this;
    }

    private long diskWrites_ ;
    /**
     * <code>int64 diskWrites = 3;</code>
     * @return The diskWrites.
     */
    @java.lang.Override
    public long getDiskWrites() {
      return diskWrites_;
    }
    /**
     * <code>int64 diskWrites = 3;</code>
     * @param value The diskWrites to set.
     * @return This builder for chaining.
     */
    public Builder setDiskWrites(long value) {
      
      diskWrites_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>int64 diskWrites = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearDiskWrites() {
      bitField0_ = (bitField0_ & ~0x00000004);
      diskWrites_ = 0L;
      onChanged();
      return this;
    }

    private long diskReadBytes_ ;
    /**
     * <code>int64 diskReadBytes = 4;</code>
     * @return The diskReadBytes.
     */
    @java.lang.Override
    public long getDiskReadBytes() {
      return diskReadBytes_;
    }
    /**
     * <code>int64 diskReadBytes = 4;</code>
     * @param value The diskReadBytes to set.
     * @return This builder for chaining.
     */
    public Builder setDiskReadBytes(long value) {
      
      diskReadBytes_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>int64 diskReadBytes = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearDiskReadBytes() {
      bitField0_ = (bitField0_ & ~0x00000008);
      diskReadBytes_ = 0L;
      onChanged();
      return this;
    }

    private long diskWriteBytes_ ;
    /**
     * <code>int64 diskWriteBytes = 5;</code>
     * @return The diskWriteBytes.
     */
    @java.lang.Override
    public long getDiskWriteBytes() {
      return diskWriteBytes_;
    }
    /**
     * <code>int64 diskWriteBytes = 5;</code>
     * @param value The diskWriteBytes to set.
     * @return This builder for chaining.
     */
    public Builder setDiskWriteBytes(long value) {
      
      diskWriteBytes_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <code>int64 diskWriteBytes = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearDiskWriteBytes() {
      bitField0_ = (bitField0_ & ~0x00000010);
      diskWriteBytes_ = 0L;
      onChanged();
      return this;
    }

    private long diskQueueLength_ ;
    /**
     * <code>int64 diskQueueLength = 6;</code>
     * @return The diskQueueLength.
     */
    @java.lang.Override
    public long getDiskQueueLength() {
      return diskQueueLength_;
    }
    /**
     * <code>int64 diskQueueLength = 6;</code>
     * @param value The diskQueueLength to set.
     * @return This builder for chaining.
     */
    public Builder setDiskQueueLength(long value) {
      
      diskQueueLength_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <code>int64 diskQueueLength = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearDiskQueueLength() {
      bitField0_ = (bitField0_ & ~0x00000020);
      diskQueueLength_ = 0L;
      onChanged();
      return this;
    }

    private long diskTransferTime_ ;
    /**
     * <code>int64 diskTransferTime = 7;</code>
     * @return The diskTransferTime.
     */
    @java.lang.Override
    public long getDiskTransferTime() {
      return diskTransferTime_;
    }
    /**
     * <code>int64 diskTransferTime = 7;</code>
     * @param value The diskTransferTime to set.
     * @return This builder for chaining.
     */
    public Builder setDiskTransferTime(long value) {
      
      diskTransferTime_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <code>int64 diskTransferTime = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearDiskTransferTime() {
      bitField0_ = (bitField0_ & ~0x00000040);
      diskTransferTime_ = 0L;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:metrics.DiskMetric)
  }

  // @@protoc_insertion_point(class_scope:metrics.DiskMetric)
  private static final metrics.DiskMetric DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new metrics.DiskMetric();
  }

  public static metrics.DiskMetric getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<DiskMetric>
      PARSER = new com.google.protobuf.AbstractParser<DiskMetric>() {
    @java.lang.Override
    public DiskMetric parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<DiskMetric> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DiskMetric> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public metrics.DiskMetric getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

